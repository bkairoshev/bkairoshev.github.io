{"version":3,"sources":["js/main.js"],"names":["showMenu","toggleId","navId","toggle","document","getElementById","nav","addEventListener","classList","navLink","querySelectorAll","linkAction","remove","forEach","n","sections","scrollActive","scrollY","window","pageYOffset","current","sectionHeight","offsetHeight","sectionTop","offsetTop","sectionId","getAttribute","querySelector","add","scrollHeader","themeButton","darkTheme","iconTheme","selectedTheme","localStorage","getItem","selectedIcon","getCurrentTheme","body","contains","getCurrentIcon","setItem","cartElement","cartButton","arrowUp","arrowDown","cartBody","cartHeaderSumm","cartHeaderCount","cartTrash","cartOrder","addressElement","Product","name","price","count","ShoppingCart","JSON","stringify","cart","removeItem","displayCart","cartSumm","cartCount","cartFromLocal","parse","length","product","index","findIndex","saveCart","push","splice","shoppingCart","innerHTML","loadCart","cartItem","createElement","append","content","cloneNode","removeItemCount","addItemCount","parentNode","className","m","addItemToCart","removeAll"],"mappings":"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","file":"main.76826672.js","sourceRoot":"..\\src","sourcesContent":["const showMenu = (toggleId, navId) => {\r\n  const toggle = document.getElementById(toggleId),\r\n    nav = document.getElementById(navId)\r\n\r\n  // Validate that variables exist\r\n  if (toggle && nav) {\r\n    toggle.addEventListener('click', () => {\r\n      // We add the show-menu class to the div tag with the nav__menu class\r\n      nav.classList.toggle('show-menu')\r\n    })\r\n  }\r\n}\r\nshowMenu('nav-toggle', 'nav-menu')\r\n\r\n/*==================== REMOVE MENU MOBILE ====================*/\r\nconst navLink = document.querySelectorAll('.nav__link')\r\n\r\nfunction linkAction() {\r\n  const navMenu = document.getElementById('nav-menu')\r\n  // When we click on each nav__link, we remove the show-menu class\r\n  navMenu.classList.remove('show-menu')\r\n}\r\n\r\nnavLink.forEach(n => n.addEventListener('click', linkAction))\r\n\r\n/*==================== SCROLL SECTIONS ACTIVE LINK ====================*/\r\nconst sections = document.querySelectorAll('section[id]')\r\n\r\nfunction scrollActive() {\r\n  const scrollY = window.pageYOffset\r\n  sections.forEach(current => {\r\n    const sectionHeight = current.offsetHeight\r\n    const sectionTop = current.offsetTop - 50;\r\n    sectionId = current.getAttribute('id')\r\n\r\n    if (scrollY > sectionTop && scrollY <= sectionTop + sectionHeight) {\r\n      document.querySelector('.nav__menu a[href*=' + sectionId + ']').classList.add('active-link')\r\n    } else {\r\n      document.querySelector('.nav__menu a[href*=' + sectionId + ']').classList.remove('active-link')\r\n    }\r\n  })\r\n}\r\n\r\nwindow.addEventListener('scroll', scrollActive)\r\n\r\n/*==================== CHANGE BACKGROUND HEADER ====================*/\r\nfunction scrollHeader() {\r\n  const nav = document.getElementById('header')\r\n  // When the scroll is greater than 200 viewport height, add the scroll-header class to the header tag\r\n  if (this.scrollY >= 200) nav.classList.add('scroll-header'); else nav.classList.remove('scroll-header')\r\n}\r\nwindow.addEventListener('scroll', scrollHeader)\r\n\r\n/*==================== DARK LIGHT THEME ====================*/\r\nconst themeButton = document.getElementById('theme-button')\r\nconst darkTheme = 'dark-theme'\r\nconst iconTheme = 'bx-toggle-right'\r\n\r\n// Previously selected topic (if user selected)\r\nconst selectedTheme = localStorage.getItem('selected-theme')\r\nconst selectedIcon = localStorage.getItem('selected-icon')\r\n\r\n// We obtain the current theme that the interface has by validating the dark-theme class\r\nconst getCurrentTheme = () => document.body.classList.contains(darkTheme) ? 'dark' : 'light'\r\nconst getCurrentIcon = () => themeButton.classList.contains(iconTheme) ? 'bx-toggle-left' : 'bx-toggle-right'\r\n\r\n// We validate if the user previously chose a topic\r\nif (selectedTheme) {\r\n  // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark\r\n  document.body.classList[selectedTheme === 'dark' ? 'add' : 'remove'](darkTheme)\r\n  themeButton.classList[selectedIcon === 'bx-toggle-left' ? 'add' : 'remove'](iconTheme)\r\n}\r\n\r\n// Activate / deactivate the theme manually with the button\r\nthemeButton.addEventListener('click', () => {\r\n  // Add or remove the dark / icon theme\r\n  document.body.classList.toggle(darkTheme)\r\n  themeButton.classList.toggle(iconTheme)\r\n  // We save the theme and the current icon that the user chose\r\n  localStorage.setItem('selected-theme', getCurrentTheme())\r\n  localStorage.setItem('selected-icon', getCurrentIcon())\r\n})\r\n\r\nconst cartElement = document.getElementById('cart')\r\nconst cartButton = document.getElementById('cart-button')\r\nconst arrowUp = 'bxs-chevron-up'\r\nconst arrowDown = 'bxs-chevron-down'\r\nconst cartBody = document.getElementById('cart-body')\r\nconst cartHeaderSumm = document.getElementById('cart-header-summ')\r\nconst cartHeaderCount = document.getElementById('cart-header-count')\r\nconst cartTrash = document.getElementById('cart-trash')\r\nconst cartOrder = document.getElementById('cart-order')\r\nconst addressElement = document.getElementById('address')\r\n\r\n\r\nclass Product {\r\n\r\n  constructor(name, price, count) {\r\n    this.name = name;\r\n    this.price = price;\r\n    this.count = count;\r\n  }\r\n\r\n}\r\n\r\nclass ShoppingCart {\r\n  cart = []\r\n  cartSumm = 0;\r\n  cartCount = 0;\r\n\r\n  saveCart() {\r\n    localStorage.setItem('cart', JSON.stringify(this.cart))\r\n  }\r\n\r\n  removeAll() {\r\n    localStorage.removeItem('cart');\r\n    displayCart();\r\n  }\r\n\r\n  loadCart() {\r\n    this.cart = [];\r\n    this.cartSumm = 0;\r\n    this.cartCount = 0;\r\n    let cartFromLocal = JSON.parse(localStorage.getItem('cart'))\r\n    this.cart = cartFromLocal ? cartFromLocal : [];\r\n    if (this.cart.length > 0) {\r\n      this.cart.forEach(product => {\r\n        this.cartSumm += product.count * product.price\r\n        this.cartCount += product.count\r\n      })\r\n    }\r\n  }\r\n\r\n  addItemToCart(name, price, count) {\r\n    let index = this.cart.findIndex(product => product.name === name)\r\n\r\n    if (index >= 0) {\r\n      this.cart[index].count++\r\n      this.saveCart();\r\n    } else {\r\n      let product = new Product(name, price, count);\r\n      this.cart.push(product);\r\n      this.saveCart();\r\n    }\r\n\r\n    displayCart()\r\n  }\r\n\r\n  removeItemCount(name) {\r\n    let index = this.cart.findIndex(product => product.name === name)\r\n\r\n    if (index >= 0 && this.cart[index].count > 1) {\r\n      this.cart[index].count--\r\n      this.saveCart()\r\n      displayCart()\r\n    } else if (index >= 0 && this.cart[index].count === 1) {\r\n      this.cart.splice(index, 1)\r\n      this.saveCart()\r\n      displayCart()\r\n    }\r\n  }\r\n\r\n  addItemCount(name) {\r\n    let index = this.cart.findIndex(product => product.name === name)\r\n\r\n    if (index >= 0) {\r\n      this.cart[index].count++\r\n      this.saveCart();\r\n      displayCart()\r\n    }\r\n  }\r\n}\r\nconst shoppingCart = new ShoppingCart()\r\n\r\n\r\ncartButton.parentNode.addEventListener('click', () => {\r\n  if (cartButton.classList.contains(arrowUp)) {\r\n    cartElement.className = 'cart preview show'\r\n    cartButton.classList.remove(arrowUp)\r\n    cartButton.classList.add(arrowDown)\r\n  } else {\r\n    cartElement.className = 'cart preview'\r\n    cartButton.classList.remove(arrowDown)\r\n    cartButton.classList.add(arrowUp)\r\n  }\r\n})\r\n\r\ndocument.querySelectorAll('.menu__button__cart').forEach(m => m.addEventListener('click', () => {\r\n  let name = m.parentNode.querySelector('.menu__title').innerHTML;\r\n  let price = m.parentNode.querySelector('.menu__price').innerHTML;\r\n  shoppingCart.addItemToCart(name, price, 1)\r\n}))\r\n\r\ncartTrash.addEventListener('click', () => {\r\n  shoppingCart.removeAll()\r\n})\r\n\r\nfunction displayCart() {\r\n  cartBody.innerHTML = ''\r\n  shoppingCart.loadCart()\r\n  if (shoppingCart.cart.length > 0) {\r\n    cartElement.classList.add('preview')\r\n    cartHeaderSumm.innerHTML = shoppingCart.cartSumm\r\n    cartHeaderCount.innerHTML = shoppingCart.cartCount\r\n\r\n    shoppingCart.cart.forEach(product => {\r\n      let cartItem = document.createElement('div')\r\n      cartItem.classList.add('cart__item')\r\n      cartItem.append(document.getElementById('cart-item-tmpl').content.cloneNode(true))\r\n      cartItem.querySelector('.cart__item__name').innerHTML = product.name\r\n\r\n      cartItem.querySelector('.cart__item__count').innerHTML = product.count\r\n\r\n      cartItem.querySelector('.decrement').addEventListener('click', () => shoppingCart.removeItemCount(product.name))\r\n      cartItem.querySelector('.increment').addEventListener('click', () => shoppingCart.addItemCount(product.name))\r\n      cartBody.append(cartItem)\r\n    })\r\n  } else {\r\n    cartElement.classList.remove('show')\r\n    cartElement.classList.remove('preview')\r\n  }\r\n\r\n}\r\ndisplayCart()\r\n\r\ncartOrder.addEventListener('click', () => {\r\n  addressElement.classList.add('show-address')\r\n})\r\n\r\n"]}